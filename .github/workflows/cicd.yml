name: CI/CD

on:
  push:
    branches: ["main"]
    paths-ignore: ["**/*.md"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  JDK_VERSION: "17"
  JDK_DISTRIBUTION: "temurin"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{env.JDK_VERSION}}
        uses: actions/setup-java@v3
        with:
          java-version: ${{env.JDK_VERSION}}
          distribution: ${{env.JDK_DISTRIBUTION}}
          cache: "maven"
      - run: ./mvnw -B compile --file pom.xml

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{env.JDK_VERSION}}
        uses: actions/setup-java@v3
        with:
          java-version: ${{env.JDK_VERSION}}
          distribution: ${{env.JDK_DISTRIBUTION}}
          cache: "maven"
      - run: ./mvnw -B test --file pom.xml

  package:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{env.JDK_VERSION}}
        uses: actions/setup-java@v3
        with:
          java-version: ${{env.JDK_VERSION}}
          distribution: ${{env.JDK_DISTRIBUTION}}
          cache: "maven"
      - run: ./mvnw -B package --file pom.xml
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: target/api*.jar

  integration-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{env.JDK_VERSION}}
        uses: actions/setup-java@v3
        with:
          java-version: ${{env.JDK_VERSION}}
          distribution: ${{env.JDK_DISTRIBUTION}}
          cache: "maven"
      - run: ./mvnw -B integration-test --file pom.xml

  deploy:
    needs: package
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/github-actions-key
          chmod 600 ~/.ssh/github-actions-key
          cat >>~/.ssh/config <<END
          Host StudentScroll
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/github-actions-key
            StrictHostKeyChecking no
          END
        env:
          SSH_HOST: ${{ secrets.AWS_HOST }}
          SSH_USER: ${{ secrets.AWS_USER }}
          SSH_KEY: ${{ secrets.AWS_SSH_KEY }}
      - name: Deploy to server
        run: |
          scp /home/runner/work/StudentScrollAPI/StudentScrollAPI/api*.jar StudentScroll:/home/ubuntu/studentscroll/api/api-v2.jar
          ssh StudentScroll 'sudo systemctl restart studentscrollapi-v2'
