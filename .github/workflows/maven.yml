name: CI

on:
  push:
    branches: ["main", "continuous-deployment"]
    paths-ignore: ["**/*.md"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  JDK_VERSION: "17"
  JDK_DISTRIBUTION: "temurin"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{env.JDK_VERSION}}
        uses: actions/setup-java@v3
        with:
          java-version: ${{env.JDK_VERSION}}
          distribution: ${{env.JDK_DISTRIBUTION}}
          cache: "maven"
      - run: mvn -B compile --file pom.xml

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{env.JDK_VERSION}}
        uses: actions/setup-java@v3
        with:
          java-version: ${{env.JDK_VERSION}}
          distribution: ${{env.JDK_DISTRIBUTION}}
          cache: "maven"
      - run: mvn -B test --file pom.xml

  package:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{env.JDK_VERSION}}
        uses: actions/setup-java@v3
        with:
          java-version: ${{env.JDK_VERSION}}
          distribution: ${{env.JDK_DISTRIBUTION}}
          cache: "maven"
      - run: mvn -B package --file pom.xml
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: target/api*.jar

  integration-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{env.JDK_VERSION}}
        uses: actions/setup-java@v3
        with:
          java-version: ${{env.JDK_VERSION}}
          distribution: ${{env.JDK_DISTRIBUTION}}
          cache: "maven"
      - run: mvn -B integration-test --file pom.xml
        
  deploy:
    needs: package
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts
      - name: Deploy to server
        run: |
          echo "$SSH_HOST" > github_actions_key && chmod 600 github_actions_key
          ssh -o StrictHostKeyChecking=no -i github_actions_key "${SSH_USER}@${SSH_HOST}" 'ls -l'
        env:
          SSH_HOST: ${{ vars.AWS_HOST }}
          SSH_USER: ${{ vars.AWS_USER }}
          SSH_KEY: ${{ secrets.AWS_SSH_KEY }}
